ADO2MPP - MICROSOFT PROJECT IMPORT GUIDE
=========================================
Native Fields + Structured ADO Metadata for Azure DevOps to Microsoft Project Bridge

OVERVIEW:
This tool exports using native Microsoft Project fields plus structured Text/Number fields
for Azure DevOps metadata. This approach provides the best of both worlds: seamless import
with accessible ADO data for filtering, grouping, and reporting.

REGIONAL SETTINGS:
- Format: European
- Decimal Separator: .
- List Separator: ;
- Thousands Separator: 

STEP 1: Open Microsoft Project
STEP 2: Go to File → Open
STEP 3: Select the generated Excel file (AzureDevOpsExport_ProjectImport.xlsx)
STEP 4: Choose 'Tasks' worksheet (for Excel) or specify ';' delimiter (for CSV)
STEP 5: In Import Wizard, configure TASK MAPPING:

CORE NATIVE FIELD MAPPINGS:
===========================

ESSENTIAL TASK FIELDS:
- Excel Column 'Unique ID' → Project Field 'Unique ID'
- Excel Column 'Name' → Project Field 'Name'  
- Excel Column 'Outline Level' → Project Field 'Outline Level'

SCHEDULING FIELDS:
- Excel Column 'Start' → Project Field 'Start' (from ADO StartDate)
- Excel Column 'Finish' → Project Field 'Finish' (from ADO TargetDate/DueDate priority)
- Excel Column 'Predecessors' → Project Field 'Predecessors'
- Excel Column '% Complete' → Project Field '% Complete'

RESOURCE ASSIGNMENT:
- Excel Column 'Resource Names' → Project Field 'Resource Names' (Owner preferred, otherwise AssignedTo)

STRUCTURED ADO METADATA FIELDS:
===============================

AZURE DEVOPS INTEGRATION:
- Excel Column 'Text1' → Project Field 'Text1' (Work Item Type: Epic/Feature/User Story/Task/Bug)
- Excel Column 'Text2' → Project Field 'Text2' (Work Item State: New/Active/Resolved/Closed)
- Excel Column 'Text3' → Project Field 'Text3' (Direct clickable URL to ADO work item)
- Excel Column 'Number1' → Project Field 'Number1' (Azure DevOps Work Item ID)

DESCRIPTION:
- Excel Column 'Notes' → Project Field 'Notes' (ADO work item description/details)

FIELD PRIORITY LOGIC:
====================
- Start Date: Uses Microsoft.VSTS.Scheduling.StartDate
- Finish Date: Uses Microsoft.VSTS.Scheduling.TargetDate (revised due date) if present, 
               otherwise Microsoft.VSTS.Scheduling.DueDate (original due date)
- Resource Names: Uses Custom.Owner if available, otherwise System.AssignedTo
- Notes: Uses System.Description from ADO work item

BENEFITS OF THIS APPROACH:
=========================
✅ Native field compatibility for core Project functionality
✅ Structured ADO metadata in standard Text/Number fields
✅ Easy filtering by Work Item Type (Text1)
✅ Easy filtering by State (Text2)
✅ Clickable URLs in Text3 field
✅ Searchable ADO IDs in Number1 field
✅ Original descriptions preserved in Notes
✅ Standard Project reports work seamlessly
✅ No field mapping conflicts

MICROSOFT PROJECT USAGE EXAMPLES:
=================================

FILTERING:
- Filter by Text1 (Type) = "User Story" to see only User Stories
- Filter by Text2 (State) = "Active" to see only active items
- Filter by Number1 (ADO ID) for specific work item ranges

GROUPING:
- Group by Text1 (Type) to organize by work item types
- Group by Text2 (State) to organize by status
- Group by Resource Names to organize by assignee

REPORTING:
- Use Text1 in reports to show work item type breakdown
- Use Text2 in reports to show status distribution
- Use Number1 for cross-referencing with ADO

SORTING:
- Sort by Number1 (ADO ID) for chronological work item order
- Sort by Text1 (Type) for hierarchical organization
- Sort by Text2 (State) for status-based organization

POST-IMPORT WORKFLOW:
====================
1. Import completes with all fields automatically mapped
2. Use View → Tables → Entry to see all standard fields
3. Use Text1, Text2, Text3, Number1 columns for ADO data
4. Click URLs in Text3 to jump to Azure DevOps work items
5. Filter, group, and report using any combination of fields
6. Export back to Excel maintaining full compatibility

TROUBLESHOOTING:
===============
If import fails:
1. Verify Excel file contains 'Tasks' worksheet
2. Ensure all required columns are present  
3. Check regional settings match configuration (European format)
4. Try CSV format if Excel format fails (automatic fallback provided)
5. Verify Text1, Text2, Text3, Number1 fields are available in your Project version
- Excel Column 'Created Date' → Project Field 'Date1' (When work item was created)
- Excel Column 'Changed Date' → Project Field 'Date2' (Last modification date)

NUMBER FORMATTING:
- All numeric fields use '.' as decimal separator
- No thousands separators for clean import
- Predecessor relationships use ';' as delimiter
- This ensures compatibility with your regional settings

CSV FALLBACK (if Excel module unavailable):
- CSV files use ';' as field delimiter
- Compatible with your system's regional settings
- Numbers formatted with '.' decimal separator
- Import: File → Open → Select CSV → Specify ';' as delimiter

ENHANCED EXPORT FEATURES:
- Complete ADO work item metadata included
- Direct links to Azure DevOps work items for easy navigation
- Work estimation and time tracking fields
- Team and iteration assignment information
- Rich metadata for project management and tracking
- Maintains hierarchical relationships (Epic → Feature → User Story → Task)

TROUBLESHOOTING:
- If "Map does not map any fields" error: Ensure Unique ID, Name, and Outline Level are mapped
- If hierarchy is lost: Verify Outline Level field is correctly mapped
- If dates don't import: Check date format in Start/Finish columns
- If resources missing: Verify Resource Names field mapping
- If CSV import issues: Ensure ';' is specified as delimiter
- Select 'Tasks' worksheet when the Import Wizard prompts for worksheet selection
- ADO Links: Use Text3 field in Project to store clickable URLs back to Azure DevOps

BENEFITS OF ENHANCED EXPORT:
1. Bidirectional traceability between Project and Azure DevOps
2. Complete work item context available in Project
3. Easy navigation back to ADO for detailed information
4. Comprehensive project tracking with all metadata
5. Better resource and time management integration

Generated: 16/06/2025 (Enhanced Version)
